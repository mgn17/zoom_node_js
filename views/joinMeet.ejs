<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Meeting Zoom NodeJS</title>

    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="socket.io/socket.io.js" defer></script>
    <script src="scripts.js" defer></script>
    <script src="https://cdn.webrtc-experiment.com/MediaStreamRecorder.js"> </script>
    <script>
        ROOM_ID = "<%=roomId%>"
        console.log(ROOM_ID)
    </script>
    <script>
        let chunks = []
        function start() {
            var mediaConstraints = {
                audio: true
            };

            navigator.getUserMedia(mediaConstraints, onMediaSuccess, onMediaError);

            function onMediaSuccess(stream) {
                var mediaRecorder = new MediaStreamRecorder(stream);
                mediaRecorder.mimeType = 'audio/ogg';
                mediaRecorder.audioChannels = 1;
                mediaRecorder.ondataavailable = function (blob) {
                    chunks.push(blob.data)
                    let b = new Blob(chunks, {type: 'audio/mp3'})
                    chunks=[]
                    var blobURL = URL.createObjectURL(b);
                    document.write('<a href="' + blobURL + '">' + blobURL + '</a>');
                };
                mediaRecorder.start(10000);
            }

            function onMediaError(e) {
                console.error('media error', e);
            }
        }

    </script>

    <style>
        #video-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, 300px);
            grid-auto-rows: 300px;
        }

        video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
</head>

<body>
<div id="video-grid"></div>
<button id="record" onclick=start()>Record</button>
<button id="download" style="visibility: hidden" onclick=download()>Download</button>
</body>


</html>
